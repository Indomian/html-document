/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['parser.js']) {
  _$jscoverage['parser.js'] = [];
  _$jscoverage['parser.js'][1] = 0;
  _$jscoverage['parser.js'][2] = 0;
  _$jscoverage['parser.js'][3] = 0;
  _$jscoverage['parser.js'][4] = 0;
  _$jscoverage['parser.js'][5] = 0;
  _$jscoverage['parser.js'][6] = 0;
  _$jscoverage['parser.js'][8] = 0;
  _$jscoverage['parser.js'][9] = 0;
  _$jscoverage['parser.js'][11] = 0;
  _$jscoverage['parser.js'][12] = 0;
  _$jscoverage['parser.js'][15] = 0;
  _$jscoverage['parser.js'][18] = 0;
  _$jscoverage['parser.js'][21] = 0;
  _$jscoverage['parser.js'][22] = 0;
  _$jscoverage['parser.js'][25] = 0;
  _$jscoverage['parser.js'][28] = 0;
  _$jscoverage['parser.js'][29] = 0;
}
_$jscoverage['parser.js'].source = ["\"use strict\";","var htmlparser = require('htmlparser2');","exports.parse = function(html, node) {","  var stack = [node];","  var last = function() {","    return stack.length === 0 ? null : stack[stack.length - 1];","  };","  var document = node.ownerDocument;","  var parser = new htmlparser.Parser({","    onopentagname: function(name) {","      var elt = document.createElement(name);","      stack.push(elt);","    },","    onattribute: function(name, value) {","      last().setAttribute(name, value);","    },","    ontext: function(text) {","      last().appendChild(document.createTextNode(text));","    },","    onclosetag: function(name) {","      var elt = stack.pop();","      last().appendChild(elt);","    },","    oncomment: function(data) {","      last().appendChild(document.createComment(data));","    }","  }, {recognizeSelfClosing: true});","  parser.write(html);","  parser.end();","};","","//# sourceMappingURL=parser.js.map"];
_$jscoverage['parser.js'][1]++;
"use strict";
_$jscoverage['parser.js'][2]++;
var htmlparser = require("htmlparser2");
_$jscoverage['parser.js'][3]++;
exports.parse = (function (html, node) {
  _$jscoverage['parser.js'][4]++;
  var stack = [node];
  _$jscoverage['parser.js'][5]++;
  var last = (function () {
  _$jscoverage['parser.js'][6]++;
  return ((stack.length === 0)? null: stack[(stack.length - 1)]);
});
  _$jscoverage['parser.js'][8]++;
  var document = node.ownerDocument;
  _$jscoverage['parser.js'][9]++;
  var parser = new (htmlparser.Parser)({onopentagname: (function (name) {
  _$jscoverage['parser.js'][11]++;
  var elt = document.createElement(name);
  _$jscoverage['parser.js'][12]++;
  stack.push(elt);
}), onattribute: (function (name, value) {
  _$jscoverage['parser.js'][15]++;
  last().setAttribute(name, value);
}), ontext: (function (text) {
  _$jscoverage['parser.js'][18]++;
  last().appendChild(document.createTextNode(text));
}), onclosetag: (function (name) {
  _$jscoverage['parser.js'][21]++;
  var elt = stack.pop();
  _$jscoverage['parser.js'][22]++;
  last().appendChild(elt);
}), oncomment: (function (data) {
  _$jscoverage['parser.js'][25]++;
  last().appendChild(document.createComment(data));
})}, {recognizeSelfClosing: true});
  _$jscoverage['parser.js'][28]++;
  parser.write(html);
  _$jscoverage['parser.js'][29]++;
  parser.end();
});
