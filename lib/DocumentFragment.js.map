{"version":3,"sources":["../src/DocumentFragment.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;AAClC,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC;;;;;;;IAMvC,gBAAgB;WAAhB,gBAAgB;0BAAhB,gBAAgB;;+BAAhB,gBAAgB;;;YAAhB,gBAAgB;;eAAhB,gBAAgB;;;;;;SAKZ,eAAG;AACZ,aAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;SAPQ,gBAAgB;GAAS,UAAU;;QAAnC,gBAAgB,GAAhB,gBAAgB;;AAU7B,MAAM,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC","file":"DocumentFragment.js","sourcesContent":["var Node = require('./Node').Node;\nvar ParentNode = require('./ParentNode').ParentNode;\n\n/**\n * The DocumentFragment interface represents a minimal document object that has no parent. It is used as\n * a light-weight version of Document to store well-formed or potentially non-well-formed fragments of XML.\n */\nexport class DocumentFragment extends ParentNode {\n\n    /**\n     * @return {String}\n     */\n    get outerHTML() {\n        return this.innerHTML;\n    }\n}\n\nObject.defineProperty(DocumentFragment.prototype, 'nodeType', { value: Node.DOCUMENT_FRAGMENT_NODE });\n"]}