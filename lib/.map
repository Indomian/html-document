{"version":3,"sources":["src/Abstract/AbstractCSSStyleDeclaration.js","src/Comment.js","src/Doctype.js","src/Document.js","src/DocumentFragment.js","src/Element.js","src/Event.js","src/HTMLElement/CSSStyleDeclaration.js","src/HTMLElement/ClassList.js","src/HTMLElement/elements/HTMLOptionElement.js","src/HTMLElement/elements/HTMLSelectElement.js","src/HTMLElement.js","src/Node.js","src/ParentNode.js","src/Text.js","src/global.js","src/parse.js","src/utils/escapeAttribute.js","src/utils/escapeHTML.js"],"names":[],"mappings":"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","file":"lib","sourcesContent":["class CSSStyleRule {\n    constructor(propertyName: string, value: string, important: boolean) {\n        this.name = propertyName;\n        this.value = value;\n        this.important = important;\n    }\n}\n\n/**\n * CSSStyleDeclaration represents a collection of CSS property-value pairs. It is used in a few APIs\n *\n * - HTMLElement.style - to manipulate the style of a single element (<elem style=\"...\">);\n * - (TODO: reword) is an interface to the declaration block returned by the style\n * property of a cssRule in a stylesheet, when the rule is a CSSStyleRule.\n * - CSSStyleDeclaration is also a read-only interface to the result of window.getComputedStyle().\n */\nexport default class AbstractCSSStyleDeclaration {\n    /**\n     * @type {String}\n     */\n    get cssText() {\n        return this._value;\n    }\n\n    /**\n     * @param {String} style\n     */\n    set cssText(style) {\n        this._parse(style);\n    }\n\n    /**\n     * Parse style\n     *\n     * @internal\n     * @param {String} style\n     */\n    _parse(style) {\n        this._properties = [];\n        this._propertiesMap = {};\n        style.split(';').forEach((part) => {\n            part = part.trim();\n            if (!part) {\n                return;\n            }\n\n            const important = !!part.match(/!important$/);\n            if (important) {\n                part = part.slice(0, -'!important'.length);\n            }\n\n            const splitPoint = part.indexOf(':');\n            if (splitPoint) {\n                const key = part.slice(0, splitPoint).trim();\n                const value = part.slice(splitPoint + 1).trim();\n                this._setProperty(key, value, important && 'important');\n            }\n        });\n        this._stringify();\n    }\n\n    /**\n     * Parse style\n     *\n     * @internal\n     */\n    _stringify() {\n        let stylified = '';\n        this._properties.forEach((s) => {\n            stylified += s.name + ':' + s.value + (s.important && '!important' || '' ) + ';';\n        });\n        this._value = stylified;\n    }\n\n    /**\n     * Returns the optional priority, \"important\". Example: priString= styleObj.getPropertyPriority('color')\n     *\n     * @param {String} propertyName\n     * @param {String|undefined|false} important\n     */\n    getPropertyPriority(propertyName) {\n        return this._propertiesMap[propertyName] && this._propertiesMap[propertyName].important && 'important';\n    }\n\n    /**\n     * Returns the optional priority, \"important\". Example: priString= styleObj.getPropertyPriority('color')\n     *\n     * @param {String} propertyName\n     * @return {*} propertyValue\n     */\n    getPropertyValue(propertyName) {\n        return this._propertiesMap[propertyName] && this._propertiesMap[propertyName].value;\n    }\n\n    /**\n     * Returns a property name. Example: nameString= styleObj.item(0) Alternative: nameString= styleObj[0]\n     *\n     * @param {Number} index\n     * @return {String} propertyName\n     */\n    item(index) {\n        return this._properties[index] && this._properties[index].name;\n    }\n\n    /**\n     * Returns the value deleted. Example: valString= styleObj.removeProperty('color')\n     *\n     * @param {String} propertyName\n     * @return {*} propertyValue\n     */\n    removeProperty(propertyName) {\n        if (this._propertiesMap[propertyName]) {\n            const value = this._propertiesMap[propertyName];\n            this._properties.splice(this._properties.indexOf(value), 1);\n            delete this._propertiesMap[propertyName];\n            this._stringify();\n            return value.value;\n        }\n    }\n\n    /**\n     * No return. Example: styleObj.setProperty('color', 'red', 'important')\n     *\n     * @param {String} propertyName\n     * @param {String} value\n     * @param {String} important\n     */\n    setProperty(propertyName, value, important) {\n        this._setProperty(propertyName, value, important);\n        this._stringify();\n    }\n\n\n    /**\n     * No return. Example: styleObj.setProperty('color', 'red', 'important')\n     *\n     * @param {String} propertyName\n     * @param {String} value\n     * @param {String} important\n     */\n    _setProperty(propertyName, value, important) {\n        if (!propertyName.match(/^[a-z\\-]+$/)) {\n            throw new Error('Not valid property name: ' + propertyName);\n        }\n\n        const cssRule = new CSSStyleRule(propertyName, value, important === 'important');\n        if (this._propertiesMap[propertyName]) {\n            this._properties.splice(this._properties.indexOf(this._propertiesMap[propertyName]), 1, cssRule);\n        } else {\n            this._properties.push(cssRule);\n        }\n\n        this._propertiesMap[propertyName] = cssRule;\n    }\n}\n","import escapeHTML from './utils/escapeHTML';\nimport Node from './Node';\n\n/**\n * @see https://developer.mozilla.org/en/docs/Web/API/Comment\n * @class Comment\n * @extends Node\n * @param {String} comment\n */\nexport default class Comment extends Node {\n    /*\n     * @constructs Comment\n     *\n     * @param {String} comment\n     */\n    constructor(comment: string) {\n        super();\n        this._value = comment;\n    }\n\n    /**\n     * @property Comment#innerHTML\n     * @inheritdoc\n     */\n    get innerHTML() {\n        return '';\n    }\n\n    /**\n     * @inheritdoc\n     */\n    get outerHTML() {\n        return '<!--' + escapeHTML(this._value) + '-->';\n    }\n\n    /**\n     * Returns comment's value\n     *\n     * @type {String}\n     */\n    get data() {\n        return this._value;\n    }\n\n    /**\n     * Set comment's value\n     *\n     * @param {String} data\n     */\n    set data(data) {\n        this._value = data;\n    }\n}\n\n/**\n * @constant {number} Comment#nodeType\n */\nObject.defineProperty(Comment.prototype, 'nodeType', { value: Node.COMMENT_NODE });\n\n/**\n * @constant {string} Comment#nodeName\n */\nObject.defineProperty(Comment.prototype, 'nodeName', { value: '#comment' });\n","import Node from './Node';\n\n/**\n * @class Doctype\n * @extends Node\n */\nexport default class Doctype extends Node {\n    _toHTML() {\n        return '<!DOCTYPE html>';\n    }\n}\n","import Node from './Node';\nimport Comment from './Comment';\nimport DocumentFragment from './DocumentFragment';\nimport HTMLElement from './HTMLElement';\nimport Text from './Text';\n\n// HTML Elements\nimport HTMLOptionElement from './HTMLElement/elements/HTMLOptionElement';\nimport HTMLSelectElement from './HTMLElement/elements/HTMLSelectElement';\n\n/**\n * @see https://developer.mozilla.org/en/docs/Web/API/Document\n * @class Document\n * @extends Node\n */\nexport default class Document extends Node {\n    /*\n     * @constructs Document\n     */\n    constructor() {\n        super();\n        this.documentElement = this.createElement('html');\n        this.head = this.createElement('head');\n        this.documentElement.appendChild(this.head);\n        this.body = this.createElement('body');\n        this.documentElement.appendChild(this.body);\n    }\n\n    /**\n     * Creates a new {@link Comment}.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document.createComment\n     *\n     * @method Document#createComment\n     * @param {String} data\n     * @return {Comment}\n    */\n    createComment(data: string) {\n        let comment = new Comment(data);\n        comment.ownerDocument = this;\n        return comment;\n    }\n\n    /**\n     * Creates a new empty {@link DocumentFragment}.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document.createDocumentFragment\n     *\n     * @method Document#createDocumentFragment\n     * @return {DocumentFragment}\n    */\n    createDocumentFragment() {\n        let fragment = new DocumentFragment();\n        fragment.ownerDocument = this;\n        return fragment;\n    }\n\n    /**\n     * Creates a new element with the given tag name.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document.createElement\n     *\n     * @method Document#createElement\n     * @param {String} name\n     * @return {HTMLElement}\n    */\n    createElement(name: string) {\n        let element;\n        switch (name.toLowerCase()) {\n            case 'select':\n                element = new HTMLSelectElement();\n                break;\n            case 'option':\n                element = new HTMLOptionElement();\n                break;\n            default:\n                element = new HTMLElement();\n                element.nodeName = name;\n        }\n        element.ownerDocument = this;\n        return element;\n    }\n\n    /**\n     * Creates a text node.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document.createTextNode\n     *\n     * @method Document#createTextNode\n     * @param {String} textContent\n     * @return {Text}\n    */\n    createTextNode(textContent) {\n        let text = new Text(textContent);\n        text.ownerDocument = this;\n        return text;\n    }\n\n    /**\n     * Returns a reference to the element by its ID.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document.getElementById\n     *\n     * @method Document#getElementById\n     * @param {String} id case-sensitive string representing the unique ID of the element being sought\n     * @return {Element} reference to an Element, or null if an element with the specified ID is not in the document.\n     */\n    getElementById(id) {\n        return this.documentElement.getElementById(id);\n    }\n\n    /**\n     * Returns an HTMLCollection of elements with the given tag name.\n     * The complete document is searched, including the root node.\n     * The returned HTMLCollection is live, meaning that it updates itself automatically to stay in sync\n     * with the DOM treewithout having to call document.getElementsByTagName() again.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document.getElementsByTagName\n     *\n     * @method Document#getElementsByTagName\n     * @param {String} tagName\n     * @return {HTMLCollection}\n     */\n    getElementsByTagName(tagName, _array) {\n        return this.documentElement.getElementsByTagName(tagName, _array);\n    }\n\n    getElementsByClassName(className) {\n        throw new Error('Not implemented');\n    }\n\n    querySelector() {\n        throw new Error('Not implemented');\n    }\n\n    querySelectorAll() {\n        throw new Error('Not implemented');\n    }\n}\n\n/**\n * @constant {number} Comment#nodeType\n */\nObject.defineProperty(Document.prototype, 'nodeType', { value: Node.DOCUMENT_NODE });\n","import Node from './Node';\nimport ParentNode from './ParentNode';\n\n/**\n * The DocumentFragment interface represents a minimal document object that has no parent. It is used as\n * a light-weight version of Document to store well-formed or potentially non-well-formed fragments of XML.\n *\n  * @see https://developer.mozilla.org/en/docs/Web/API/DocumentFragment\n  * @class DocumentFragment\n  * @extends ParentNode\n */\nexport default class DocumentFragment extends ParentNode {\n    /**\n     * @inheritdoc\n     */\n    get outerHTML() {\n        return this.innerHTML;\n    }\n}\n\n/**\n * @constant {number} Comment#nodeType\n */\nObject.defineProperty(DocumentFragment.prototype, 'nodeType', { value: Node.DOCUMENT_FRAGMENT_NODE });\n","import Node from './Node';\nimport ParentNode from './ParentNode';\n\n/**\n * The Element interface represents an object within a DOM document.\n * This interface describes methods and properties common to all kinds of elements.\n * Specific behaviors are described in interfaces which inherit from Element but add additional functionality.\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/Element\n * @class Element\n * @extends ParentNode\n */\n/**\n * The Element.innerHTML property sets or gets the HTML syntax describing the element's descendants.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n * @member {String} Element#innerHTML\n */\n/**\n * The outerHTML attribute of the element DOM interface gets the serialized HTML fragment describing the element including its descendants.\n * It can be set to replace the element with nodes parsed from the given string.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n * @member {String} Element#outerHTML\n */\n\nexport default class Element extends ParentNode {\n    /**\n     * The id of the element.\n     *\n     * @member {String} Element#id\n     */\n    get id() {\n        return this.getAttribute('id');\n    }\n\n    /**\n     * @ignore\n     * @param {String} id\n     */\n    set id(id) {\n        this.setAttribute('id', id);\n    }\n\n    /**\n     * The tag name of the element.\n     *\n     * @member {String} Element#tagName\n     * @readonly\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n\n    /**\n     * Returns a live {@link HTMLCollection} containing all objects of type {@link Element}\n     * that are children of this ParentNode.\n     *\n     * Note: this currently returns a non-live array.\n     *\n     * later type {HTMLCollection}\n     *\n     * @member {Array.<Element>} Element#children\n     * @readonly\n     */\n    get children() {\n        return this._childNodes.filter((n) => n instanceof Element);\n    }\n\n    /**\n     * Returns the {@link Element} that is the first child of this ParentNode, or null if there is none.\n     *\n     * @member {Element} Element#firstElementChild\n     * @readonly\n     */\n    get firstElementChild() {\n        return this._childNodes[0] || null;\n    }\n\n    /**\n     * Returns the {@link Element} that is the first child of this ParentNode, or null if there is none.\n     *\n     * @member {Element} Element#lastElementChild\n     * @readonly\n     */\n    get lastElementChild() {\n        return this._childNodes.length === 0 ? null : this._childNodes[this._childNodes.length - 1];\n    }\n\n    /**\n     * Returns an unsigned long giving the amount of children that the object has.\n     *\n     * @member {Number} Element#childElementCount\n     * @readonly\n     */\n    get childElementCount() {\n        return this._childNodes.length;\n    }\n\n    /**\n     * Returns a reference to the element by its ID.\n     *\n     * @method Element#getElementById\n     * @param {String} id case-sensitive string representing the unique ID of the element being sought\n     * @return {Element} reference to an Element, or null if an element with the specified ID is not in the document.\n     */\n    getElementById(id) {\n        return this._childNodesRecursiveFind((e) => {\n            if (e instanceof Element && e.getAttribute('id') === id) {\n                return true;\n            }\n        }) || null;\n    }\n\n    /**\n     * Returns an HTMLCollection of elements with the given tag name.\n     * The complete document is searched, including the root node.\n     * The returned HTMLCollection is live, meaning that it updates itself automatically to stay in sync\n     * with the DOM treewithout having to call document.getElementsByTagName() again.\n     *\n     * @method Element#getElementsByTagName\n     * @param {String} tagName\n     * @return {HTMLCollection}\n     */\n    getElementsByTagName(tagName, _array) {\n        if (!tagName) {\n            return !_array ? this.children.slice()\n                         : _array.push.apply(_array, this.children);\n        }\n        _array = _array || [];\n        tagName = tagName.toLowerCase();\n        this.children.forEach((e) => {\n            if (e.nodeName.toLowerCase() === tagName) {\n                _array.push(e);\n            }\n        });\n        return _array;\n    }\n}\n\n/**\n * @constant {string} Comment#nodeType\n */\nObject.defineProperty(Element.prototype, 'nodeType', { value: Node.ELEMENT_NODE });\n","/**\n * The Element interface represents an object within a DOM document.\n * This interface describes methods and properties common to all kinds of elements.\n * Specific behaviors are described in interfaces which inherit from Element but add additional functionality.\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/Event\n * @class Event\n */\nexport default class Event {\n    /**\n     * @param {String} type\n     */\n    constructor(type: string) {\n        /**\n         * A boolean indicating whether the event bubbles up through the DOM or not.\n         * @member {Boolean} Event#bubbles\n         * @readonly\n         */\n        this.bubbles = false;\n\n        /**\n         * A boolean indicating whether the event is cancelable.\n         * @member {Boolean} Event#cancelable\n         * @readonly\n         */\n        this.cancelable = false;\n\n        /**\n         * A reference to the currently registered target for the event.\n         * @member {HTMLElement} Event#currentTarget\n         * @readonly\n         */\n        this.currentTarget = false;\n\n        /**\n         * Indicates whether or not event.preventDefault() has been called on the event.\n         * @member {Boolean} Event#defaultPrevented\n         * @readonly\n         */\n        this.defaultPrevented = false;\n\n        /**\n         * Indicates which phase of the event flow is being processed.\n         * @member {Number} Event#eventPhase\n         * @readonly\n         */\n        this.eventPhase = 0;\n\n        /**\n         * A reference to the target to which the event was originally dispatched.\n         * @member {HTMLElement} Event#target\n         * @readonly\n         */\n        this.target = null;\n\n        /**\n         * The time that the event was created.\n         * @member {Number} Event#timeStamp\n         * @readonly\n         */\n        this.timeStamp = Date.now() * 1000;\n\n        /**\n         * The name of the event (case-insensitive).\n         * @member {String} Event#type\n         * @readonly\n         */\n        this.type = type.toLowerCase();\n\n        /**\n         * Indicates whether or not the event was initiated by the browser (after a user click for instance)\n         * or by a script (using an event creation method)\n         * @member {Boolean} Event#isTrusted\n         * @readonly\n         */\n        this.isTrusted = false;\n    }\n\n    /**\n     * @method Event#preventDefault\n     */\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n\n    /**\n     * @method Event#stopImmediatePropagation\n     */\n    stopImmediatePropagation() {\n        this.immediatePropagationStopped = true;\n        this.stopPropagation();\n    }\n\n    /**\n     * @method Event#stopPropagation\n     */\n    stopPropagation() {\n        this.propagationStopped = true;\n    }\n\n    /**\n     * @method Event#isImmediatePropagationStopped\n     * @return {Boolean}\n     */\n    isImmediatePropagationStopped() {\n        return this.immediatePropagationStopped;\n    }\n}\n","import AbstractCSSStyleDeclaration from '../Abstract/AbstractCSSStyleDeclaration';\n\n/**\n * @see https://developer.mozilla.org/en/docs/Web/API/CSSStyleDeclaration\n * @class CSSStyleDeclaration\n * @param {HTMLElement} element\n */\nexport default class CSSStyleDeclaration extends AbstractCSSStyleDeclaration {\n    /**\n     * @param {HTMLElement} element\n     */\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _stringify() {\n        super._stringify();\n        this._element._setAttribute('style', this.cssText);\n    }\n}\n","// TODO : DOMTokenList, unit tests\n\n/**\n * @see https://developer.mozilla.org/fr/docs/Web/API/Element/classList\n * @class ClassList\n * @param {HTMLElement} element\n */\nexport default class ClassList {\n    /**\n     * @param {HTMLElement} element\n     */\n    constructor(element) {\n        this._element = element;\n        this.tokens = [];\n    }\n\n    /**\n     * @member {Number} ClassList#length\n     * @readonly\n     */\n    get length() {\n        return this.tokens.length;\n    }\n\n    /**\n     *\n     */\n    _parse(tokens) {\n        this.tokens = tokens.split(' ');\n    }\n\n    /**\n     *\n     */\n    _stringify() {\n        this._element._setAttribute('class', this.tokens.join(' '));\n    }\n\n    /**\n     * Adds a class to an element's list of classes\n     *\n     * @method ClassList#add\n     * @param {...string} className\n     *\n     */\n    add() {\n        let updated = false;\n        Array.prototype.forEach.call(arguments, (token) => {\n            token = String(token);\n            if (this.tokens.indexOf(token) === -1) {\n                this.tokens.push(token);\n                updated = true;\n            }\n        });\n        if (updated) {\n            this._stringify();\n        }\n    }\n\n    /**\n     * Removes a class from an element's list of classes\n     *\n     * @method ClassList#remove\n     * @param {...string} token\n     */\n    remove() {\n        let updated = false;\n        Array.prototype.forEach.call(arguments, (token) => {\n            const index = this.tokens.indexOf(token);\n            if (index !== -1) {\n                this.tokens.splice(index, 1);\n                updated = true;\n            }\n        });\n        if (updated) {\n            this._stringify();\n        }\n    }\n\n    /**\n     * Toggles the existence of a class in an element's list of classes\n     *\n     * @method ClassList#toggle\n     * @param {String} token\n     * @param {Boolean} force\n     * @return {Boolean} if the token was added\n     *\n     */\n    toggle(token, force) {\n        const result = this.contains(token);\n        const method = result ? force !== true && 'remove'\n                        : force !== false && 'add';\n\n        if (method) {\n            this[method](token);\n        }\n\n        return !result;\n    }\n\n    /**\n     * Checks if an element's list of classes contains a specific class\n     *\n     * @method ClassList#contains\n     * @param {String} token\n     * @return {Boolean} if the token is present\n     */\n    contains(token) {\n        return this.tokens.indexOf(token) !== -1;\n    }\n}\n","import HTMLElement from '../../HTMLElement';\n\n/**\n * The HTMLOptionElement interface represents option elements\n * and inherits all classes and methods of the HTMLElement interface.\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/HTMLOptionElement\n * @class HTMLOptionElement\n */\nexport default class HTMLOptionElement extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    /**\n     * Contains the initial value of the selected HTML attribute,\n     * indicating whether the option is selected by default or not.\n     *\n     * @member {Boolean} HTMLOptionElement#defaultSelected\n     * @ignore Unsuported\n     */\n    get defaultSelected() {\n        throw new Error('Unsuported');\n    }\n\n    /**\n     * @ignore\n     * @param {Boolean} selected\n     */\n    set defaultSelected(selected) {\n        throw new Error('Unsuported');\n    }\n\n    /**\n     * Reflects the value of the disabled HTML attribute, which indicates that the option is unavailable to be selected.\n     * An option can also be disabled if it is a child of an optgroup element that is disabled.\n     *\n     * @member {Boolean} HTMLOptionElement#disabled\n     */\n    get disabled() {\n        return !!this.getAttribute('disabled') &&\n             (this.parentNode.nodeName !== 'optgroup' || !this.parentNode.disabled);\n    }\n\n    /**\n     * @ignore\n     * @param {Boolean} disabled\n     */\n    set disabled(disabled) {\n        if (disabled) {\n            this.setAttribute('disabled', 'disabled');\n        } else {\n            this.removeAttribute('disabled');\n        }\n    }\n\n    /**\n     * If the option is a descendent of a select element, then this property has the same value as\n     * the form property of the corresponding HTMLSelectElement object; otherwise, it is null.\n     *\n     * @member {HTMLFormElement} HTMLOptionElement#form\n     * @readonly\n     */\n    get form() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * @ignore\n     */\n    set form(value) {\n        throw new Error('form is read only');\n    }\n\n    /**\n     * The position of the option within the list of options it belongs to, in tree-order.\n     * If the option is not part of a list of options, like when it is part of the datalist element, the value is 0.\n     *\n     * @member {Number} HTMLOptionElement#index\n     * @readonly\n     * @ignore Unsuported\n     */\n    get index() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * @ignore\n     * @param {Number} value\n     */\n    set index(value) {\n        throw new Error('index is read only');\n    }\n\n    /**\n     * Reflects the value of the label HTML attribute, which provides a label for the option.\n     * If this attribute isn't specifically set, reading it returns the element's text content.\n     *\n     * @member {String} HTMLOptionElement#label\n     * @ignore Not implemented\n     */\n    get label() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * @ignore\n     * @param {String} label\n     */\n    set label(label) {\n        throw new Error('Not implemented');\n    }\n\n    get _select() {\n        let node = this;\n\n        while (node = node.parentNode) {\n            if (node.nodeName === 'select') {\n                return node;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Indicates whether the option is currently selected.\n     *\n     * @member {Boolean} HTMLOptionElement#selected\n     */\n    get selected() {\n        return !!this.getAttribute('selected');\n    }\n\n    /**\n     * @ignore\n     * @param {Boolean} selected\n     */\n    set selected(selected) {\n        if (selected) {\n            let selectElement = this._select;\n            if (!selectElement.multiple) {\n                let selectedOption = selectElement.selectedOption;\n                if (selectedOption) {\n                    selectedOption.selected = false;\n                }\n            }\n\n            this.setAttribute('selected', 'selected');\n        } else {\n            this.removeAttribute('selected');\n        }\n    }\n\n    /**\n     * Contains the text content of the element.\n     *\n     * @member {String} HTMLOptionElement#text\n     */\n    get text() {\n        return this.textContent;\n    }\n\n    /**\n     * @ignore\n     */\n    set text(text) {\n        while (this.firstChild) {\n            this.removeChild(this.firstChild);\n        }\n\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n\n    /**\n     * Reflects the value of the value HTML attribute, if it exists;\n     * otherwise reflects value of the Node.textContent property.\n     *\n     * @member {String} HTMLOptionElement#value\n     */\n    get value() {\n        const value = this.getAttribute('value');\n        return value === null ? this.textContent : value;\n    }\n\n    /**\n     * @ignore\n     * @param {String} value\n     */\n    set value(value) {\n        if (value) {\n            this.setAttribute('value', value);\n        } else {\n            this.removeAttribute('value');\n        }\n    }\n\n}\n\n/**\n * @constant {string} HTMLOptionElement#nodeName option\n */\nObject.defineProperty(HTMLOptionElement.prototype, 'nodeName', { value: 'option' });\n","import HTMLElement from '../../HTMLElement';\n\n/**\n * HTML select elements share all of the properties and methods\n * of other HTML elements described in the element section.\n * They also have the specialized interface HTMLSelectElement.\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/HTMLSelectElement\n * @class HTMLSelectElement\n *\n */\nexport default class HTMLSelectElement extends HTMLElement {\n    constructor() {\n        super();\n    }\n\n    get autoFocus() {\n        throw new Error('Not implemented');\n    }\n\n    set autoFocus(value) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * The form that this element is associated with. If this element is a descendant of a form element,\n     * then this attribute is the ID of that form element.\n     * If the element is not a descendant of a form element, then:\n     * The attribute can be the ID of any form element in the same document.\n     *\n     * @param {HTMLFormElement}\n     * @ignore Not implemented\n     */\n    get form() {\n        throw new Error('Not implemented');\n    }\n\n    set form(value) {\n        throw new Error('form is read only');\n    }\n\n    get labels() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Reflects the disabled HTML attribute, which indicates whether the control is disabled.\n     * If it is disabled, it does not accept clicks.\n     *\n     * @member {Boolean} HTMLSelectElement#disabled\n     */\n    get disabled() {\n        return !!this.getAttribute('disabled');\n    }\n\n    /**\n     * @ignore\n     * @param {Boolean} disabled\n     */\n    set disabled(disabled) {\n        if (disabled) {\n            this.setAttribute('disabled', 'disabled');\n        } else {\n            this.removeAttribute('disabled');\n        }\n    }\n\n    /**\n     * The number of option elements in this select element.\n     *\n     * @member {Number} HTMLSelectElement#length\n     * @readonly\n     */\n    get length() {\n        return this.options.length;\n    }\n\n    set length(value) {\n        throw new Error('Length is read only');\n    }\n\n    /**\n     * Reflects the multiple HTML attribute, whichindicates whether multiple items can be selected.\n     *\n     * @member {Boolean} HTMLSelectElement#multiple\n     */\n    get multiple() {\n        return !!this.getAttribute('multiple');\n    }\n\n    /**\n     * @ignore\n     * @param {Boolean} multiple\n     */\n    set multiple(multiple) {\n        if (multiple) {\n            this.setAttribute('multiple', 'multiple');\n        } else {\n            this.removeAttribute('multiple');\n        }\n    }\n\n    /**\n     * Reflects the name HTML attribute, containing the name of this control used by servers and DOM search functions.\n     *\n     * @member {String} HTMLSelectElement#name\n     */\n    get name() {\n        return this.getAttribute('name');\n    }\n\n    /**\n     * @ignore\n     * @param {String} name\n     */\n    set name(name) {\n        this.setAttribute('name', name);\n    }\n\n    /**\n     * The set of option elements contained by this element.\n     *\n     * @member {Array.<Element>} HTMLSelectElement#options\n     * @readonly\n     */\n    get options() {\n        return this.getElementsByTagName('option');\n    }\n\n    set options(value) {\n        throw new Error('options is read only');\n    }\n\n    /**\n     * Reflects the required HTML attribute, which indicates whether the user is required\n     * to select a value before submitting the form\n     *\n     * @member {Boolean} HTMLSelectElement#required\n     */\n    get required() {\n        return !!this.getAttribute('required');\n    }\n\n    /**\n     * @ignore\n     * @param {Boolean} required\n     */\n    set required(required) {\n        if (required) {\n            this.setAttribute('required', 'required');\n        } else {\n            this.removeAttribute('required');\n        }\n    }\n\n    /**\n     * The index of the first selected option element. The value -1 is returned if no element is selected.\n     *\n     * @member {Number} HTMLSelectElement#selectedIndex\n     */\n    get selectedIndex() {\n        let index = -1;\n        const options = this.options;\n\n        if (!options.length) {\n            return index;\n        }\n\n        options.some(function(option, i) {\n            if (option.selected) {\n                index = i;\n                return true;\n            }\n        });\n\n        if (index === -1 && !this.multiple) {\n            options.some(function(option, i) {\n                if (option.value === '') {\n                    index = i;\n                    return true;\n                }\n            });\n\n            if (index === -1) {\n                return 0;\n            }\n        }\n\n        return index;\n    }\n\n    /**\n     * @ignore\n     * @param {Number} index\n     */\n    set selectedIndex(index) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * The set of options that are selected.\n     *\n     * @member {Array.<Element>} HTMLSelectElement#selectedOptions\n     * @readonly\n     */\n    get selectedOptions() {\n        return this.options.filter(function(option) {\n            return option.selected;\n        });\n    }\n\n    /**\n     * The first selected option.\n     *\n     * @member {Array.<Element>} HTMLSelectElement#selectedOptions\n     * @readonly\n     */\n    get selectedOption() {\n        let selectedOption;\n        this.options.some(function(option) {\n            if (option.selected) {\n                selectedOption = option;\n                return true;\n            }\n        });\n        return selectedOption;\n    }\n\n    /**\n     * Reflects the size HTML attribute, which contains the number of visible items in the control.\n     * The default is 1, unless multiple is true, in which case it is 4.\n     *\n     * @member {Number} HTMLSelectElement#size\n     */\n    get size() {\n        return Number(this.getAttribute('size')) || (this.multiple ? 4 : 1);\n    }\n\n    /**\n     * @ignore\n     * @param {String} size\n     */\n    set size(size) {\n        this.setAttribute('size', size);\n    }\n\n    get tabIndex() {\n        throw new Error('Obsolete since HTML5');\n    }\n\n    /**\n     * The form control's type. When multiple is true, it returns select-multiple; otherwise, it returns select-one.\n     * Read only.\n     *\n     * @member {Number} HTMLSelectElement#size\n     * @readonly\n     */\n    get type() {\n        return this.multiple ? 'select-multiple' : 'select-one';\n    }\n\n    set type(value) {\n        throw new Error('type is read only');\n    }\n\n    get validationMessage() {\n        throw new Error('Not implemented');\n    }\n\n    set validationMessage(value) {\n        throw new Error('validationMessage is read only');\n    }\n\n    get validity() {\n        throw new Error('Not implemented');\n    }\n\n    set validity(value) {\n        throw new Error('validity is read only');\n    }\n\n    /**\n     * The value of this form control, that is, of the first selected option.\n     *\n     * @member {String} HTMLSelectElement#value\n     */\n    get value() {\n        return this.selectedOption && this.selectedOption.value;\n    }\n\n    /**\n     * @ignore\n     * @param {String} value\n     */\n    set value(value) {\n        this.selectedOption.value = value;\n        return value;\n    }\n\n    get willValidate() {\n        throw new Error('Not implemented');\n    }\n\n    set willValidate(value) {\n        throw new Error('willValidate is read only');\n    }\n\n\n    /**\n     * Gets an item from the options collection for this select element.\n     *\n     * @param {Number} index\n     * @ return {HTMLSelectElement}\n     */\n    item(index) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Gets the item in the options collection with the specified name.\n     * The name string can match either the id or the name attribute of an option node\n     *\n     * @ignore Not implemented\n     * @method HTMLSelectElement#namedItem\n     * @param {String} name\n     * @ return {HTMLSelectElement}\n     */\n    namedItem(name) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Removes the element at the specified index from the options collection for this select element.\n     *\n     * @ignore Not implemented\n     * @method HTMLSelectElement#remove\n     * @param {Number} index\n     */\n    remove(index) {\n        throw new Error('Not implemented');\n    }\n}\n\n/**\n * @constant {string} HTMLSelectElement#nodeName option\n */\nObject.defineProperty(HTMLSelectElement.prototype, 'nodeName', { value: 'select' });\n","import Element from './Element';\nimport CSSStyleDeclaration from './HTMLElement/CSSStyleDeclaration';\nimport ClassList from './HTMLElement/ClassList';\nimport escapeAttribute from './utils/escapeAttribute';\n\nconst voidElements = 'area base br col embed hr img input keygen link meta param source track wbr'.split(' ');\n\n/**\n * The HTMLElement interface represents any HTML element.\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/HTMLElement\n * @class HTMLElement\n * @extends Element\n */\nexport default class HTMLElement extends Element {\n    constructor() {\n        super();\n        /**\n         * returns a token list of the class attribute of the element\n         * @member {CSSStyleDeclaration} HTMLElement#style\n         * @readonly\n         */\n        this.style = new CSSStyleDeclaration(this);\n        /**\n         * returns a token list of the class attribute of the element\n         * @member {ClassList} HTMLElement#classList\n         * @readonly\n         */\n        this.classList = new ClassList(this);\n    }\n\n    /**\n     * The class of the element.\n     *\n     * @member {String} HTMLElement#className\n     */\n    get className() {\n        return this.getAttribute('class');\n    }\n\n    /**\n     * @ignore\n     * @param {String} className\n     */\n    set className(className) {\n        this.setAttribute('class', className);\n    }\n\n    _updatedAttribute(attributeName, value) {\n        if (attributeName === 'style') {\n            this.style.cssText = value || '';\n        }\n\n        if (attributeName === 'class') {\n            this.classList._parse(value || '');\n        }\n    }\n\n    /**\n     * @ignore\n     * @return {String}\n     */\n    get outerHTML() {\n        return '<' + this.nodeName + Object.keys(this._attributes).reduce((value, attributeName) => {\n            return value + ' ' + attributeName + '=\"' + escapeAttribute(this._attributes[attributeName]) + '\"';\n        }, '') + '>' + (voidElements.indexOf(this.nodeName) !== -1 ? '' : this.innerHTML + '</' + this.nodeName + '>');\n    }\n\n}\n","/**\n * A Node is an interface from which a number of DOM types inherit,\n * and allows these various types to be treated (or tested) similarly.\n *\n  * @see https://developer.mozilla.org/en/docs/Web/API/Node\n  * @class Node\n */\nexport default class Node {\n    /*\n     * @constructs Node\n     */\n    constructor() {\n        this._attributes = {};\n    }\n\n    /* ATTRIBUTES */\n\n    /**\n     * get attribute's value\n     *\n     * @method Node#getAttribute\n     * @param {String} attributeName\n     * @return {String}\n     */\n    getAttribute(attributeName) {\n        return this._attributes[attributeName];\n    }\n\n    /**\n     * checks if attribute exists for node\n     *\n     * @method Node#hasAttribute\n     * @param {String} attributeName\n     * @returns {boolean}\n     */\n    hasAttribute(attributeName) {\n        return attributeName in this._attributes;\n    }\n\n    /**\n     * set attribute's value\n     *\n     * @method Node#setAttribute\n     * @param {String} attributeName\n     * @param {String} attributeValue\n     */\n    setAttribute(attributeName, attributeValue) {\n        this._setAttribute(attributeName, attributeValue);\n        this._updatedAttribute(attributeName, this._attributes[attributeName]);\n    }\n\n    /**\n     * set attribute's value\n     *\n     * @internal\n     * @param {String} attributeName\n     * @param {String} attributeValue\n     */\n    _setAttribute(attributeName, attributeValue) {\n        this._attributes[attributeName] = String(attributeValue);\n    }\n\n    /**\n     * remove attribute\n     *\n     * @method Node#removeAttribute\n     * @param {String} attributeName\n     */\n    removeAttribute(attributeName) {\n        delete this._attributes[attributeName];\n        this._updatedAttribute(attributeName);\n    }\n\n    /**\n     * @internal\n     * @param {String} attributeName\n     */\n    _updatedAttribute(attributeName) {\n\n    }\n\n    /* CONTENT */\n\n    /**\n     * @property Node#textContent\n     * @return {String}\n     */\n    get textContent() {\n        return '';\n    }\n\n    _toHTML() {\n        return this.outerHTML;\n    }\n\n    /* EVENTS */\n\n    /**\n     * @property Node#addEventListener\n     * @param {string} eventType\n     * @param {function} listener\n     * @param {boolean} capturingPhase\n     */\n    addEventListener(eventType, listener, capturingPhase) {\n        const _eventsKey = capturingPhase ? '_eventsCapturingPhase' : '_eventsBubblingPhase';\n        if (!this[_eventsKey]) {\n            this[_eventsKey] = new Map();\n        }\n\n        let callbacks;\n        if (!this[_eventsKey].has(eventType)) {\n            this[_eventsKey].set(eventType, callbacks = []);\n        } else {\n            callbacks = this[_eventsKey].get(eventType);\n        }\n\n        callbacks.push(listener);\n        return this;\n    }\n\n    /**\n     * @method Node#addEventListener\n     * @param {string} eventType\n     * @param {function} listener\n     * @param {boolean} capturingPhase\n     */\n    removeEventListener(eventType, listener, capturingPhase) {\n        const _eventsKey = capturingPhase ? '_eventsCapturingPhase' : '_eventsBubblingPhase';\n        if (this[_eventsKey] && this[_eventsKey].has(eventType)) {\n            let callbacks = this[_eventsKey].get(eventType);\n            let i = callbacks.indexOf(listener);\n            if (i === -1) {\n                return false;\n            }\n\n            callbacks.splice(i, 1);\n        }\n    }\n\n    /**\n     * @method Node#dispatchEvent\n     * @param {Event} event\n     * @return {boolean}\n     */\n    dispatchEvent(event) {\n        event.target = this;\n\n        // Capturing phase\n        const capturingPhase = function(event) {\n            if (this._parentNode) {\n                capturingPhase.call(this._parentNode, event);\n            }\n\n            if (event.propagationStopped) {\n                return;\n            }\n\n            const callbacks = this._eventsCapturingPhase && this._eventsCapturingPhase.get(event.type);\n            if (callbacks) {\n                callbacks.some(function(callback) {\n                    callback();\n                    return event.immediatePropagationStopped;\n                });\n            }\n        };\n\n        capturingPhase.call(this, event);\n\n        // Bubbling phase\n        if (!event.propagationStopped) {\n            const bubblingPhase = function(event) {\n                const callbacks = this._eventsBubblingPhase && this._eventsBubblingPhase.get(event.type);\n                if (callbacks) {\n                    callbacks.some(function(callback) {\n                        callback();\n                        return event.immediatePropagationStopped;\n                    });\n                }\n\n                if (!event.propagationStopped && this._parentNode) {\n                    bubblingPhase.call(this._parentNode, event);\n                }\n            };\n\n            bubblingPhase.call(this, event);\n        }\n\n        return !event.defaultPrevented;\n    }\n}\n\n/**\n * @constant {number} Node.ELEMENT_NODE\n */\nObject.defineProperty(Node, 'ELEMENT_NODE', { value: 1 });\n\n/**\n * @constant {number} Node.ATTRIBUTE_NODE\n */\nObject.defineProperty(Node, 'ATTRIBUTE_NODE', { value: 2 });\n\n/**\n * @constant {number} Node.TEXT_NODE\n */\nObject.defineProperty(Node, 'TEXT_NODE', { value: 3 });\n\n/**\n * @constant {number} Node.CDATA_SECTION_NODE\n */\nObject.defineProperty(Node, 'CDATA_SECTION_NODE', { value: 4 });\n\n/**\n * @constant {number} Node.ENTITY_REFERENCE_NODE\n */\nObject.defineProperty(Node, 'ENTITY_REFERENCE_NODE', { value: 5 });\n\n/**\n * @constant {number} Node.ENTITY_NODE\n */\nObject.defineProperty(Node, 'ENTITY_NODE', { value: 6 });\n\n/**\n * @constant {number} Node.PROCESSING_INSTRUCTION_NODE\n */\nObject.defineProperty(Node, 'PROCESSING_INSTRUCTION_NODE', { value: 7 });\n\n/**\n * @constant {number} Node.COMMENT_NODE\n */\nObject.defineProperty(Node, 'COMMENT_NODE', { value: 8 });\n\n/**\n * @constant {number} Node.DOCUMENT_NODE\n */\nObject.defineProperty(Node, 'DOCUMENT_NODE', { value: 9 });\n\n/**\n * @constant {number} Node.DOCUMENT_TYPE_NODE\n */\nObject.defineProperty(Node, 'DOCUMENT_TYPE_NODE', { value: 10 });\n\n/**\n * @constant {number} Node.DOCUMENT_FRAGMENT_NODE\n */\nObject.defineProperty(Node, 'DOCUMENT_FRAGMENT_NODE', { value: 11 });\n\n/**\n * @constant {number} Node.NOTATION_NODE\n */\nObject.defineProperty(Node, 'NOTATION_NODE', { value: 12 });\n","import Node from './Node';\nimport parse from './parse';\n\n/**\n * The ParentNode interface contains methods that are particular to Node objects that can have children.\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/ParentNode\n * @class ParentNode\n * @extends Node\n */\nexport default class ParentNode extends Node {\n    constructor() {\n        super();\n        this._childNodes = [];\n    }\n\n    /**\n     * TODO return {HTMLCollection}\n     * @member {String} ParentNode#childNodes\n     * @readonly\n     */\n    get childNodes() {\n        return this._childNodes;\n    }\n\n    _childNodesRecursiveForEach(callback) {\n        this._childNodes.forEach(function(node) {\n            callback(node);\n            if (node instanceof ParentNode) {\n                node._childNodesRecursiveForEach(callback);\n            }\n        });\n    }\n\n    _childNodesRecursiveFind(callback) {\n        let result;\n        this._childNodes.some(function(node) {\n            if (callback(node)) {\n                result = node;\n                return true;\n            }\n\n            if (node instanceof ParentNode) {\n                result = node._childNodesRecursiveFind(callback);\n                if (result !== undefined) {\n                    return true;\n                }\n            }\n        });\n        return result;\n    }\n\n    /**\n     * @member {Node|null} ParentNode#parentNode\n     * @readonly\n     */\n    get parentNode() {\n        return this._parentNode || null;\n    }\n    /**\n     * @member {Node|null} ParentNode#firstChild\n     * @readonly\n     */\n    get firstChild() {\n        return this._childNodes[0] || null;\n    }\n\n    /**\n     * @member {Node|null} ParentNode#lastChild\n     * @readonly\n     */\n    get lastChild() {\n        return this._childNodes[this._childNodes.length - 1] || null;\n    }\n\n    /**\n     * @member {Node|null} ParentNode#previousSibling\n     * @readonly\n     */\n    get previousSibling() {\n        const indexInParent = this.parentNode._childNodes.indexOf(this);\n        if (indexInParent === -1) {\n            throw new Error('Unexpected state: this node is not in the parent');\n        }\n\n        return indexInParent !== 0 && this.parentNode._childNodes[indexInParent - 1] || null;\n    }\n\n    /**\n     * @member {Node|null} ParentNode#nextSibling\n     * @readonly\n     */\n    get nextSibling() {\n        const indexInParent = this.parentNode._childNodes.indexOf(this);\n        if (indexInParent === -1) {\n            throw new Error('Unexpected state: this node is not in the parent');\n        }\n\n        return this.parentNode._childNodes[indexInParent + 1] || null;\n    }\n\n    /**\n     * @method ParentNode#appendChild\n     * @param {Node} child\n     * @return {Node}\n     */\n    appendChild(child) {\n        if (!(child instanceof Node)) {\n            throw new Error('Trying to add non node element');\n        }\n\n        if (child._parentNode) {\n            child._parentNode.removeChild(child);\n        }\n\n        if (child.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            let childNode;\n\n            while (childNode = child.firstChild) {\n                child.removeChild(childNode);\n                this.appendChild(childNode);\n            }\n\n            return child;\n        }\n\n        child._parentNode = this;\n        this._childNodes.push(child);\n        return child;\n    }\n\n    /**\n     * @method ParentNode#replaceChild\n     * @param {Node} newChild\n     * @param {Node} oldChild\n     * @return {Node}\n     */\n    replaceChild(newChild, oldChild) {\n        const index = this._childNodes.indexOf(oldChild);\n        if (index === -1) {\n            throw new Error('Node was not found');\n        }\n\n        if (newChild._parentNode) {\n            newChild._parentNode.removeChild(newChild);\n        }\n\n        if (newChild.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            const newChildren = [];\n            let childNode;\n\n            while (childNode = newChild.firstChild) {\n                newChild.removeChild(childNode);\n                childNode._parentNode = this;\n                newChildren.push(childNode);\n            }\n\n            this._childNodes.splice.bind(this._childNodes, index, 1).apply(null, newChildren);\n        } else {\n            newChild._parentNode = this;\n            this._childNodes[index] = newChild;\n        }\n\n        delete oldChild._parentNode;\n        return oldChild;\n    }\n\n    /**\n     * @method ParentNode#removeChild\n     * @param {Node} toRemoveChild\n     * @return {Node}\n     */\n    removeChild(toRemoveChild) {\n        const index = this._childNodes.indexOf(toRemoveChild);\n        if (index === -1) {\n            throw new Error('Node was not found');\n        }\n\n        this._childNodes.splice(index, 1);\n        delete toRemoveChild._parentNode;\n        return toRemoveChild;\n    }\n\n    /**\n     * @method ParentNode#insertBefore\n     * @param {Node} child\n     * @param {Node} existingChild\n     * @return {Node}\n     */\n    insertBefore(child, existingChild) {\n        const index = this._childNodes.indexOf(existingChild);\n        if (index === -1) {\n            throw new Error('Node was not found');\n        }\n\n        if (child._parentNode) {\n            child._parentNode.removeChild(child);\n        }\n\n        if (child.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            const children = [];\n            let childNode;\n\n            while (childNode = child.firstChild) {\n                child.removeChild(childNode);\n                childNode._parentNode = this;\n                children.push(childNode);\n            }\n\n            this._childNodes.splice.bind(this._childNodes, index, 0).apply(null, children);\n        } else {\n            child._parentNode = this;\n            this._childNodes.splice(index, 0, child);\n        }\n\n        return child;\n    }\n\n    /**\n     * @ignore\n     * @return {String}\n     */\n    get innerHTML() {\n        return this._childNodes.reduce(function(value, node) {\n            return value + node._toHTML();\n        }, '');\n    }\n\n    /**\n     * @ignore\n     * @param {String} html\n     */\n    set innerHTML(html) {\n        this._childNodes = [];\n        parse(html, this);\n    }\n\n    /**\n     * @ignore\n     * @return {String}\n     */\n    get textContent() {\n        return this._childNodes.reduce(function(value, node) {\n            return value + node.textContent;\n        }, '');\n    }\n}\n","import escapeHTML from './utils/escapeHTML';\nimport Node from './Node';\n\n/**\n* @see https://developer.mozilla.org/en/docs/Web/API/Text\n* @class Text\n* @extends Node\n* @param {String} textContent\n* @property {String} textContent\n*/\nexport default class Text extends Node {\n    constructor(textContent) {\n        super();\n        this.value = textContent;\n    }\n\n    _toHTML() {\n        return escapeHTML(this.value);\n    }\n\n    get textContent() {\n        return this.value;\n    }\n\n    set textContent(textContent) {\n        this.value = textContent;\n    }\n}\n\n/**\n * @constant {number} Comment#nodeType\n */\nObject.defineProperty(Text.prototype, 'nodeType', { value: Node.TEXT_NODE });\n\n/**\n * @constant {string} Comment#nodeName\n */\nObject.defineProperty(Text.prototype, 'nodeName', { value: '#text' });\n","import Node from './Node';\nimport Event from './Event';\nimport Document from './Document';\nimport DocumentFragment from './DocumentFragment';\n\nglobal.window = global;\nglobal.document = new Document();\nglobal.Event = Event;\nglobal.Node = Node;\nglobal.Document = Document;\nglobal.DocumentFragment = DocumentFragment;\n","import htmlparser from 'htmlparser2';\n\n/**\n * @param {String} html\n * @param {Node} node\n */\nexport default function parse(html, node) {\n    const stack = [node];\n    const last = function() {\n        return stack.length === 0 ? null : stack[stack.length - 1];\n    };\n\n    const document = node.ownerDocument;\n\n    const parser = new htmlparser.Parser({\n        onopentagname(name) {\n            const elt = document.createElement(name);\n            stack.push(elt);\n        },\n\n        onattribute(name, value) {\n            last().setAttribute(name, value);\n        },\n\n        ontext(text) {\n            last().appendChild(document.createTextNode(text));\n        },\n\n        onclosetag(name) {\n            const elt = stack.pop();\n            last().appendChild(elt);\n        },\n\n        oncomment(data) {\n            last().appendChild(document.createComment(data));\n        },\n    }, { recognizeSelfClosing: true });\n    parser.write(html);\n    parser.end();\n}\n","import escapeHTML from './escapeHTML';\n\nexport default function escapeAttribute(string) {\n    return escapeHTML(string).replace(/\"/g, '&quot;');\n}\n","export default function escapeHTML(string) {\n    if (!string) {\n        return string;\n    }\n\n    return String(string)\n        .replace(/&(?!\\w+;)/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\n"]}