{"version":3,"sources":["../src/NodeList.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;IAOqB,QAAQ;AACd,aADM,QAAQ,GACX;8BADG,QAAQ;;;;;;AAOrB,YAAI,CAAC,MAAM,GAAG,CAAC,CAAC;KACnB;;;;;;;;;;;;iBARgB,QAAQ;;eAerB,cAAC,KAAK,EAAE;AACR,mBAAO,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;SAC9B;;;;;iCAEI,iBAAG;;;AACJ,qCAAA,KAAK,CAAC,SAAS,CAAC,IAAI,EAAC,IAAI,MAAA,yBAAC,IAAI,qBAAK,SAAS,GAAC,CAAC;SACjD;;;;6BAEgB,iBAAG;;;AAChB,gBAAI,KAAK,GAAG,CAAC,CAAC;;AAEd,mBAAO;AACH,oBAAI,EAAE;2BAAO,EAAE,KAAK,EAAE,MAAK,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,MAAK,MAAM,EAAE;iBAAC;aACpE,CAAC;SACL;;;WA7BgB,QAAQ;;;kBAAR,QAAQ","file":"NodeList.js","sourcesContent":["/**\n * NodeList objects are collections of nodes\n * such as those returned by Node.childNodes and the document.querySelectorAll method..\n *\n  * @see https://developer.mozilla.org/en/docs/Web/API/NodeList\n  * @class NodeList\n */\nexport default class NodeList {\n    constructor() {\n        /**\n         * @property {number} length of the list\n         * @memberof NodeList\n\n         */\n        this.length = 0;\n    }\n\n    /**\n     * @method NodeList#item\n     * @param {number} index\n     * @return {Node|null}\n     */\n    item(index) {\n        return this[index] || null;\n    }\n\n    _push() {\n        Array.prototype.push.call(this, ...arguments);\n    }\n\n    [Symbol.iterator]() {\n        let index = 0;\n\n        return {\n            next: () => ({ value: this[index++], done: index > this.length }),\n        };\n    }\n}\n"]}