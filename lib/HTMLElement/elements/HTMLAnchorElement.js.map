{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLAnchorElement.js"],"names":[],"mappings":"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","file":"HTMLAnchorElement.js","sourcesContent":["import HTMLElement from '../../HTMLElement';\nimport Url from '../../utils/Url';\n\n/**\n * The HTMLAnchorElement interface represents hyperlink elements and provides special properties and methods\n * (beyond those of the regular HTMLElement object interface they also have available to them by inheritance)\n * for manipulating the layout and presentation of such elements.\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/HTMLAnchorElement\n * @class HTMLAnchorElement\n */\nexport default class HTMLAnchorElement extends HTMLElement {\n    constructor() {\n        super();\n        this._href = new Url();\n    }\n    /**\n     * @inheritDoc\n     */\n    setAttribute(key, value) {\n        super.setAttribute(key, value);\n        if (key === 'href') {\n            this.href = value;\n        }\n    }\n\n    /**\n     * Is a DOMString that reflects the href HTML attribute, containing a valid URL of a linked resource.\n     *\n     * @member {string} HTMLAnchorElement#href\n     * @returns {string}\n     */\n    get href() {\n        return this._href.toString();\n    }\n\n    /**\n     * @param {string} value\n     */\n    set href(value) {\n        this._href.href = value;\n        this._setAttribute('href', this._href.toString());\n        if (this.host === '' && this.ownerDocument) {\n            this._href.host = this.ownerDocument.location.host;\n        }\n\n        if (this.protocol === '' && this.ownerDocument) {\n            this._href.protocol = this.ownerDocument.location.protocol;\n        }\n    }\n\n    /**\n     * Is a DOMString representing the fragment identifier, including the leading hash mark ('#'), if any, in the\n     * referenced URL.\n     *\n     * @member {string} HTMLAnchorElement#hash\n    * @returns {string}\n     */\n    get hash() {\n        return this._href.hash;\n    }\n\n    /**\n     * @param {string} value\n     */\n    set hash(value) {\n        this._href.hash = value;\n        this._setAttribute('href', this._href.toString());\n    }\n\n    /**\n     * Is a DOMString representing the hostname and port (if it's not the default port) in the referenced URL.\n     *\n     * @member {string} HTMLAnchorElement#host\n     * @returns {string}\n     */\n    get host() {\n        return this._href.host;\n    }\n\n    /**\n     * @param {string} value\n     */\n    set host(value) {\n        this._href.host = value;\n        this._setAttribute('href', this._href.toString());\n    }\n\n    /**\n     * Is a DOMString representing the hostname in the referenced URL.\n     *\n     * @member {string} HTMLAnchorElement#hostname\n     * @returns {string}\n     */\n    get hostname() {\n        return this._href.hostname;\n    }\n\n    /**\n     * @param {string} value\n     */\n    set hostname(value) {\n        this._href.hostname = value;\n        this._setAttribute('href', this._href.toString());\n    }\n\n    /**\n     * Is a DOMString that reflects the rel HTML attribute, specifying the relationship of the target object to the\n     * linked object.\n     *\n     * @member {string} HTMLAnchorElement#rel\n     * @returns {string}\n     */\n    get rel() {\n        return this.getAttribute('rel');\n    }\n\n    /**\n     * @param {string} value\n     */\n    set rel(value) {\n        this.setAttribute('rel', value);\n    }\n\n    /**\n     * Is a DOMString representing the path name component, if any, of the referenced URL.\n     *\n     * @member {string} HTMLAnchorElement#pathname\n     * @returns {string}\n     */\n    get pathname() {\n        return this._href.pathname;\n    }\n\n    /**\n     * @param {string} value\n     */\n    set pathname(value) {\n        this._href.pathname = value;\n        this._setAttribute('href', this._href.toString());\n    }\n\n    /**\n     * Is a DOMString representing the protocol component, including trailing colon (':'), of the referenced URL.\n     *\n     * @member {string} HTMLAnchorElement#protocol\n     * @returns {string}\n     */\n    get protocol() {\n        return this._href.protocol;\n    }\n\n    /**\n     * @param {string} value\n     */\n    set protocol(value) {\n        this._href.protocol = value;\n        this._setAttribute('href', this._href.toString());\n    }\n}\n\n/**\n * @constant {string} HTMLAnchorElement#nodeName option\n */\nObject.defineProperty(HTMLAnchorElement.prototype, 'nodeName', { value: 'a' });\n"]}