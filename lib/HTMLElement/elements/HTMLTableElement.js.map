{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLTableElement.js"],"names":[],"mappings":"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","file":"HTMLTableElement.js","sourcesContent":["import HTMLElement from '../../HTMLElement';\nimport DOMException from '../../DOMException';\n\n/**\n * The HTMLTable interface represents table\n * and inherits all classes and methods of the HTMLElement interface.\n *\n * @see https://developer.mozilla.org/en/docs/Web/API/HTMLTableElement\n */\nexport default class HTMLTableElement extends HTMLElement {\n    /**\n     * Caption of element, HTMLElement &lt;caption&gt;\n     *\n     * @type {HTMLElement|null}\n     */\n    get caption() {\n        return this.querySelector('caption');\n    }\n\n    /**\n     * Sets caption of element\n     *\n     * @param {HTMLElement|null} element - element with tagName caption\n     * @ignore\n     */\n    set caption(element) {\n        if (element.tagName !== 'caption') {\n            throw new DOMException('HierarchyRequestError');\n        }\n\n        let caption = this.caption;\n        if (caption !== null) {\n            this.replaceChild(element, caption);\n        } else {\n            if (this.firstChild) {\n                this.insertBefore(element, this.firstChild);\n            } else {\n                this.appendChild(element);\n            }\n        }\n    }\n\n    /**\n     * Table head\n     *\n     * @type {HTMLElement|null}\n     */\n    get tHead() {\n        return this._childNodeFind(child => child.tagName === 'thead');\n    }\n\n    /**\n     * @ignore\n     * @param {HTMLElement|null} element\n     */\n    set tHead(element) {\n        if (element.tagName !== 'thead') {\n            throw new DOMException('HierarchyRequestError');\n        }\n\n        let tHead = this.tHead;\n\n        if (tHead !== null) {\n            this.replaceChild(element, tHead);\n        } else {\n            if (this.children.every((child) => {\n                if (child.tagName !== 'caption' && child.tagName !== 'colgroup') {\n                    this.insertBefore(element, child);\n                    return false;\n                }\n\n                return true;\n            })) {\n                this.appendChild(element);\n            }\n        }\n    }\n\n    /**\n     * tFoot element if any\n     *\n     * @type {HTMLElement|null}\n     */\n    get tFoot() {\n        return this._childNodeFind(child => child.tagName === 'tfoot');\n    }\n\n    /**\n     * @ignore\n     * @param {HTMLElement|null} element\n     */\n    set tFoot(element) {\n        if (element.tagName !== 'tfoot') {\n            throw new DOMException('HierarchyRequestError');\n        }\n\n        let tfoot = this.tFoot;\n        if (tfoot !== null) {\n            this.replaceChild(element, tfoot);\n        } else {\n            if (this.children.every((child) => {\n                if (child.tagName !== 'caption' && child.tagName !== 'colgroup' && child !== 'thead') {\n                    this.insertBefore(element, child);\n                    return false;\n                }\n\n                return true;\n            })) {\n                this.appendChild(element);\n            }\n        }\n    }\n\n    /**\n     * All tr elements from table\n     *\n     * @type {HTMLElement[]}\n     * @readonly\n     */\n    get rows() {\n        let result = [];\n        if (this.tHead !== null) {\n            this.tHead.children.forEach((element) => {\n                if (element.tagName === 'tr') {\n                    result.push(element);\n                }\n            });\n        }\n\n        const tBodies = this.tBodies;\n        if (tBodies.length !== 0) {\n            tBodies.forEach((body) => {\n                body.children.forEach((element) => {\n                    if (element.tagName === 'tr') {\n                        result.push(element);\n                    }\n                });\n            });\n        }\n\n        if (this.tFoot !== null) {\n            this.tFoot.children.forEach((element) => {\n                if (element.tagName === 'tr') {\n                    result.push(element);\n                }\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns all tbody elements from table\n     *\n     * @type {HTMLElement[]}\n     * @readonly\n     */\n    get tBodies() {\n        return this.children.filter(element => element.tagName === 'tbody');\n    }\n\n    /**\n     * Method creates &lt;thead&gt; element for table and adds it in particular place\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/createTHead\n     * @return {HTMLElement}\n     */\n    createTHead() {\n        let tHead = this.tHead;\n        if (tHead !== null) {\n            return tHead;\n        }\n\n        tHead = this.ownerDocument.createElement('thead');\n        this.tHead = tHead;\n        return tHead;\n    }\n\n    /**\n     * Method deletes first &lt;thead&gt; element found in table (if any)\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/deleteTHead\n     */\n    deleteTHead() {\n        let thead = this.tHead;\n        if (thead !== null) {\n            this.removeChild(thead);\n        }\n    }\n\n    /**\n     * The HTMLTableElement.createCaption() method returns the caption for the table.\n     * If no caption element exists on the table, this method creates it, then returns it.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/createCaption\n     * @return {HTMLElement}\n     */\n    createCaption() {\n        let caption = this.caption;\n\n        if (caption !== null) {\n            return caption;\n        }\n\n        caption = this.ownerDocument.createElement('caption');\n        this.caption = caption;\n        return caption;\n    }\n\n    /**\n     * Method deletes first found &lt;caption&gt; element if any\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/deleteCaption\n     */\n    deleteCaption() {\n        let caption = this.caption;\n\n        if (caption !== null) {\n            this.removeChild(caption);\n        }\n    }\n\n    /**\n     * Method adds &lt;tfoot&gt; element to table\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/createTFoot\n     * @return {HTMLElement}\n     */\n    createTFoot() {\n        let tfoot = this.tFoot;\n\n        if (tfoot !== null) {\n            return tfoot;\n        }\n\n        tfoot = this.ownerDocument.createElement('tfoot');\n        this.tFoot = tfoot;\n        return tfoot;\n    }\n\n    /**\n     * Method deletes first found &lt;tfoot&gt; element from table\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/deleteTFoot\n     */\n    deleteTFoot() {\n        let tfoot = this.tFoot;\n        if (tfoot !== null) {\n            this.removeChild(tfoot);\n        }\n    }\n\n    /**\n     * Method creates &lt;tbody&gt; element and puts it in particular place\n     *\n     * @private\n     */\n    _createTBody() {\n        let tbody = this.ownerDocument.createElement('tbody');\n        let tfoot = this.tFoot;\n        if (tfoot) {\n            this.insertBefore(tbody, tfoot);\n        } else {\n            this.appendChild(tbody);\n        }\n\n        return tbody;\n    }\n\n    /**\n     * Method creates new &lt;tr&gt; element and adds it to table. If no &lt;tbody&gt; present in table\n     * creates it and adds &lt;tr&gt; to it, elsewhere adds row to last &lt;tbody&gt; element\n     *\n     * @param {number} [index=-1]\n     * @return {HTMLElement}\n     */\n    insertRow(index = -1) {\n        let row = this.ownerDocument.createElement('tr');\n        let tbody = null;\n        let tbodies = this.tBodies;\n\n        if (tbodies.length === 0) {\n            tbody = this._createTBody();\n        } else {\n            tbody = tbodies[tbodies.length - 1];\n        }\n\n        if (index === -1 || index === tbody.length) {\n            tbody.appendChild(row);\n        } else if (index < tbody.length - 1) {\n            tbody.insertBefore(row, tbody.children[index]);\n        } else {\n            throw new DOMException('IndexSizeError');\n        }\n\n        return row;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    appendChild(element) {\n        if (element.tagName === 'tr') {\n            let tbodies = this.tBodies;\n            let tbody = null;\n            if (tbodies.length === 0) {\n                tbody = this._createTBody();\n            } else {\n                tbody = tbodies[tbodies.length - 1];\n            }\n\n            return tbody.appendChild(element);\n        }\n\n        return super.appendChild(element);\n    }\n}\n\n/**\n * @constant {string} HTMLTableElement#nodeName table\n */\nObject.defineProperty(HTMLTableElement.prototype, 'nodeName', { value: 'table' });\n"]}