{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLMetaElement.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;4BAAwB,mBAAmB;;;;;;;;;;;IAQtB,eAAe;cAAf,eAAe;;aAAf,eAAe;8BAAf,eAAe;;mCAAf,eAAe;;;;;;;iBAAf,eAAe;;;;;;;;;;;aAMrB,eAAG;AACV,gBAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;AAC9B,uBAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aACvC;;AAED,mBAAO,EAAE,CAAC;SACb;;;;;;;;;aAMU,aAAC,KAAK,EAAE;AACf,gBAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACvC;;;;;;;;;;;;aAOY,eAAG;AACZ,gBAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;AACjC,uBAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;aAC1C;;AAED,mBAAO,EAAE,CAAC;SACb;;;;;;;;;aAMY,aAAC,KAAK,EAAE;AACjB,gBAAI,CAAC,YAAY,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;SAC1C;;;;;;;;;;;;aAOO,eAAG;AACP,gBAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;AAC3B,uBAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;aACpC;;AAED,mBAAO,EAAE,CAAC;SACb;;;;;;;;;aAMO,aAAC,KAAK,EAAE;AACZ,gBAAI,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SACpC;;;WA9DgB,eAAe;;;qBAAf,eAAe;AAoEpC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC","file":"HTMLMetaElement.js","sourcesContent":["import HTMLElement from '../../HTMLElement';\n\n/**\n * The HTMLMetaElement interface contains descriptive metadata about a document. It inherits all of the properties\n * and methods described in the HTMLElement interface.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMetaElement\n */\nexport default class HTMLMetaElement extends HTMLElement {\n    /**\n     * Gets or sets the value of meta-data property.\n     *\n     * @type {string}\n     */\n    get content() {\n        if (this.hasAttribute('content')) {\n            return this.getAttribute('content');\n        }\n\n        return '';\n    }\n\n    /**\n     * @ignore\n     * @param {string} value\n     */\n    set content(value) {\n        this.setAttribute('content', value);\n    }\n\n    /**\n     * Gets or sets the name of an HTTP response header to define for a document.\n     *\n     * @type {string}\n     */\n    get httpEquiv() {\n        if (this.hasAttribute('http-equiv')) {\n            return this.getAttribute('http-equiv');\n        }\n\n        return '';\n    }\n\n    /**\n     * @ignore\n     * @param {string} value\n     */\n    set httpEquiv(value) {\n        this.setAttribute('http-equiv', value);\n    }\n\n    /**\n     * Gets or sets the name of a meta-data property to define for a document.\n     *\n     * @type {string}\n     */\n    get name() {\n        if (this.hasAttribute('name')) {\n            return this.getAttribute('name');\n        }\n\n        return '';\n    }\n\n    /**\n     * @ignore\n     * @param {string} value\n     */\n    set name(value) {\n        this.setAttribute('name', value);\n    }\n}\n\n/**\n * @constant {string} HTMLMetaElement#nodeName meta\n */\nObject.defineProperty(HTMLMetaElement.prototype, 'nodeName', { value: 'meta' });\n\n"]}