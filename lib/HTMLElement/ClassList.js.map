{"version":3,"sources":["../../src/HTMLElement/ClassList.js"],"names":[],"mappings":";;;;;;;;;;;;IAEqB,SAAS;;;;;AAIf,aAJM,SAAS,CAId,OAAO,EAAE;8BAJJ,SAAS;;AAKtB,YAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACpB;;iBAPgB,SAAS;;;;;;eAmBpB,gBAAC,MAAM,EAAE;AACX,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACnC;;;;;;;eAKS,sBAAG;AACT,gBAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/D;;;;;;;;;;eAQE,eAAG;;;AACF,gBAAI,OAAO,GAAG,KAAK,CAAC;AACpB,iBAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,KAAK,EAAK;AAC/C,qBAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACtB,oBAAI,MAAK,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;AACnC,0BAAK,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,2BAAO,GAAG,IAAI,CAAC;iBAClB;aACJ,CAAC,CAAC;AACH,gBAAI,OAAO,EAAE;AACT,oBAAI,CAAC,UAAU,EAAE,CAAC;aACrB;SACJ;;;;;;;;;eAOK,kBAAG;;;AACL,gBAAI,OAAO,GAAG,KAAK,CAAC;AACpB,iBAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,KAAK,EAAK;AAC/C,oBAAI,KAAK,GAAG,OAAK,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACvC,oBAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACd,2BAAK,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC7B,2BAAO,GAAG,IAAI,CAAC;iBAClB;aACJ,CAAC,CAAC;AACH,gBAAI,OAAO,EAAE;AACT,oBAAI,CAAC,UAAU,EAAE,CAAC;aACrB;SACJ;;;;;;;;;;;;eAUK,gBAAC,KAAK,EAAE,KAAK,EAAE;AACjB,gBAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClC,gBAAI,MAAM,GAAG,MAAM,GAAG,KAAK,KAAK,IAAI,IAAI,QAAQ,GAC9B,KAAK,KAAK,KAAK,IAAI,KAAK,CAAC;;AAE3C,gBAAI,MAAM,EAAE;AACR,oBAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC;aACvB;AACD,mBAAO,CAAC,MAAM,CAAC;SAClB;;;;;;;;;;eASO,kBAAC,KAAK,EAAE;AACZ,mBAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SAC5C;;;;;;;aArFS,eAAG;AACT,mBAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SAC7B;;;WAdgB,SAAS;;;qBAAT,SAAS","file":"ClassList.js","sourcesContent":["// TODO : DOMTokenList, unit tests\n\nexport default class ClassList {\n    /**\n     * @param {HTMLElement} element\n     */\n    constructor(element) {\n        this._element = element;\n        this.tokens = [];\n    }\n\n    /**\n     * @return {Number}\n     */\n    get length() {\n        return this.tokens.length;\n    }\n\n    /**\n     *\n     */\n    _parse(tokens) {\n        this.tokens = tokens.split(' ');\n    }\n\n    /**\n     *\n     */\n    _stringify() {\n        this._element._setAttribute('class', this.tokens.join(' '));\n    }\n\n    /**\n     * Adds a class to an element's list of classes\n     *\n     * @param {...string} className\n     *\n     */\n    add() {\n        var updated = false;\n        Array.prototype.forEach.call(arguments, (token) => {\n            token = String(token);\n            if (this.tokens.indexOf(token) === -1) {\n                this.tokens.push(token);\n                updated = true;\n            }\n        });\n        if (updated) {\n            this._stringify();\n        }\n    }\n\n    /**\n     * Removes a class from an element's list of classes\n     *\n     * @param {...string} token\n     */\n    remove() {\n        var updated = false;\n        Array.prototype.forEach.call(arguments, (token) => {\n            var index = this.tokens.indexOf(token);\n            if (index !== -1) {\n                this.tokens.splice(index, 1);\n                updated = true;\n            }\n        });\n        if (updated) {\n            this._stringify();\n        }\n    }\n\n    /**\n     * Toggles the existence of a class in an element's list of classes\n     *\n     * @param {string} token\n     * @param {Boolean} force\n     * @return {Boolean} if the token was added\n     *\n     */\n    toggle(token, force) {\n        var result = this.contains(token);\n        var method = result ? force !== true && 'remove'\n                        : force !== false && 'add';\n\n        if (method) {\n            this[method](token);\n        }\n        return !result;\n    }\n\n\n    /**\n     * Checks if an element's list of classes contains a specific class\n     *\n     * @param {string} token\n     * @return {Boolean} if the token is present\n     */\n    contains(token) {\n        return this.tokens.indexOf(token) !== -1;\n    }\n}\n"]}