{"version":3,"sources":["../../src/utils/escapeAttributeName.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMO,SAAS,uBAAuB,CAAC,IAAI,EAAE;AAC1C,MAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AACzC,SAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,MAAM;WAAK,MAAM,CAAC,WAAW,EAAE;GAAA,CAAC,CAAC;CAC5E;;;;;;;;;;AAQM,SAAS,uBAAuB,CAAC,IAAI,EAAE;AAC1C,MAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,UAAC,KAAK,EAAE,MAAM;WAAK,GAAG,GAAG,MAAM,CAAC,WAAW,EAAE;GAAA,CAAC,CAAC;AACrF,SAAO,OAAO,GAAG,MAAM,CAAC;CAC3B","file":"escapeAttributeName.js","sourcesContent":["/**\n * Function converts attribute name \"data-some-value\" to \"someValue\".\n *\n * @param {string} name\n * @returns {string}\n */\nexport function attributeNameToProperty(name) {\n    let result = name.replace(/^data-/i, '');\n    return result.replace(/-(\\w)/g, (match, letter) => letter.toUpperCase());\n}\n\n/**\n * Function converts dataset property name \"someValue\" to \"data-some-value\".\n *\n * @param {string} name\n * @returns {string}\n */\nexport function propertyNameToAttribute(name) {\n    let result = name.replace(/([A-Z])/g, (match, letter) => '-' + letter.toLowerCase());\n    return 'data-' + result;\n}\n"]}