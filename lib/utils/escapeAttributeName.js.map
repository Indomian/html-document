{"version":3,"sources":["../../src/utils/escapeAttributeName.js"],"names":[],"mappings":";;;;;;;;;;;;;AAMA,SAAS,uBAAuB,CAAC,IAAI,EAAE;AACnC,QAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AACzC,WAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,KAAK,EAAE,MAAM;eAAK,MAAM,CAAC,WAAW,EAAE;KAAA,CAAC,CAAC;CAC5E;;;;;;;;;;AAQD,SAAS,uBAAuB,CAAC,IAAI,EAAE;AACnC,QAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,UAAC,KAAK,EAAE,MAAM;eAAK,GAAG,GAAG,MAAM,CAAC,WAAW,EAAE;KAAA,CAAC,CAAC;AACrF,WAAO,OAAO,GAAG,MAAM,CAAC;CAC3B;;QAGG,uBAAuB,GAAvB,uBAAuB;QACvB,uBAAuB,GAAvB,uBAAuB","file":"escapeAttributeName.js","sourcesContent":["/**\n * Function converts attribute name \"data-some-value\" to \"someValue\".\n *\n * @param {string} name\n * @returns {string}\n */\nfunction attributeNameToProperty(name) {\n    let result = name.replace(/^data-/i, '');\n    return result.replace(/-(\\w)/g, (match, letter) => letter.toUpperCase());\n}\n\n/**\n * Function converts dataset property name \"someValue\" to \"data-some-value\".\n *\n * @param {string} name\n * @returns {string}\n */\nfunction propertyNameToAttribute(name) {\n    let result = name.replace(/([A-Z])/g, (match, letter) => '-' + letter.toLowerCase());\n    return 'data-' + result;\n}\n\nexport {\n    attributeNameToProperty,\n    propertyNameToAttribute\n};\n"]}