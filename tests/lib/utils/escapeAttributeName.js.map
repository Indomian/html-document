{"version":3,"sources":["../../src/utils/escapeAttributeName.js"],"names":[],"mappings":";;;wBAC2B,UAAU;;2CAC4B,wCAAwC;;AAEzG,IAAI,CAAC,8BAA8B,EAAE,YAAM;AACvC,+BAAY,0DAAwB,YAAY,CAAC,EAAE,OAAO,CAAC,CAAC;AAC5D,+BAAY,0DAAwB,mBAAmB,CAAC,EAAE,aAAa,CAAC,CAAC;AACzE,+BAAY,0DAAwB,wBAAwB,CAAC,EAAE,iBAAiB,CAAC,CAAC;CACrF,CAAC,CAAC;;AAEH,IAAI,CAAC,8BAA8B,EAAE,YAAM;AACvC,+BAAY,0DAAwB,OAAO,CAAC,EAAE,YAAY,CAAC,CAAC;AAC5D,+BAAY,0DAAwB,aAAa,CAAC,EAAE,mBAAmB,CAAC,CAAC;AACzE,+BAAY,0DAAwB,gBAAgB,CAAC,EAAE,uBAAuB,CAAC,CAAC;CACnF,CAAC,CAAC","file":"escapeAttributeName.js","sourcesContent":["/* global test */\nimport { strictEqual} from 'proclaim';\nimport { attributeNameToProperty, propertyNameToAttribute } from '../../../lib/utils/escapeAttributeName';\n\ntest('Test attributeNameToProperty', () => {\n    strictEqual(attributeNameToProperty('data-other'), 'other');\n    strictEqual(attributeNameToProperty('data-other-dashes'), 'otherDashes');\n    strictEqual(attributeNameToProperty('data-other-dashes-more'), 'otherDashesMore');\n});\n\ntest('Test propertyNameToAttribute', () => {\n    strictEqual(propertyNameToAttribute('other'), 'data-other');\n    strictEqual(propertyNameToAttribute('otherDashes'), 'data-other-dashes');\n    strictEqual(propertyNameToAttribute('otherLongValue'), 'data-other-long-value');\n});\n"]}