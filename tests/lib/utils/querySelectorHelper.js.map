{"version":3,"sources":["../../src/utils/querySelectorHelper.js"],"names":[],"mappings":"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","file":"querySelectorHelper.js","sourcesContent":["/* global test */\nimport { strictEqual, deepEqual, isNull } from 'proclaim';\nimport Document from '../../../lib/Document';\nimport { querySelector, querySelectorAll } from '../../../lib/utils/querySelectorHelper';\n\nconst document = new Document();\n\ntest('querySelector', () => {\n    const div = document.createElement('div');\n    div.innerHTML = '<span/><span class=\"a b c\" data-test=\"test\">content<span></span></span>';\n    const span1 = div.children[0];\n    const spanAbc = div.children[1];\n    const innerSpan = div.children[1].children[0];\n\n\n    strictEqual(div.querySelector('span'), span1);\n});\n\ntest('querySelector has attribute', () => {\n    const div = document.createElement('div');\n    div.innerHTML = '<span/><span class=\"a b c\" data-test=\"test\">content<span></span></span>';\n    const span1 = div.children[0];\n    const spanAbc = div.children[1];\n    const innerSpan = div.children[1].children[0];\n\n\n    strictEqual(div.querySelector('span[class]'), spanAbc);\n});\n\ntest('querySelector = attribute', () => {\n    const div = document.createElement('div');\n    div.innerHTML = '<span/><span class=\"a b c\" data-test=\"test\">content<span></span></span>';\n    const span1 = div.children[0];\n    const spanAbc = div.children[1];\n    const innerSpan = div.children[1].children[0];\n\n\n    isNull(div.querySelector('span[class=\"a\"]'));\n    strictEqual(div.querySelector('span[class=\"a b c\"]'), spanAbc);\n});\n\ntest('querySelectorAll', () => {\n    const div = document.createElement('div');\n    div.innerHTML = '<span/><span class=\"a b c\" data-test=\"test\">content<span></span></span>';\n    const span1 = div.children[0];\n    const spanAbc = div.children[1];\n    const innerSpan = div.children[1].children[0];\n\n\n    deepEqual(div.querySelectorAll('span'), [span1, spanAbc, innerSpan]);\n});\n\ntest('querySelectorAll has attribute', () => {\n    const div = document.createElement('div');\n    div.innerHTML = '<span/><span class=\"a b c\" data-test=\"test\">content<span></span></span>';\n    const span1 = div.children[0];\n    const spanAbc = div.children[1];\n    const innerSpan = div.children[1].children[0];\n\n\n    deepEqual(div.querySelectorAll('span[class]'), [spanAbc]);\n});\n"]}