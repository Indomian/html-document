{"version":3,"sources":["../../../src/HTMLElement/elements/HTMLSelectElement.js"],"names":[],"mappings":";;;wBACoE,UAAU;;AAE9E,IAAM,GAAG,GAAG,kBAAkB,CAAC;;AAE/B,IAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC;AAC3C,IAAM,iBAAiB,GAAG,OAAO,CAAC,GAAG,GAAG,wCAAwC,CAAC,CAAC;AAClF,IAAM,iBAAiB,GAAG,OAAO,CAAC,GAAG,GAAG,wCAAwC,CAAC,CAAC;;AAElF,IAAI,CAAC,sDAAsD,EAAE,YAAM;AAC/D,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,+BAAY,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;CACvC,CAAC,CAAC;;AAEH,IAAI,CAAC,oCAAoC,EAAE,YAAM;AAC7C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,2BAAQ,GAAG,CAAC,SAAS,CAAC,CAAC;;AAEvB,OAAG,CAAC,YAAY,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAClC,0BAAO,GAAG,CAAC,SAAS,CAAC,CAAC;;AAEtB,OAAG,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;AACjC,2BAAQ,GAAG,CAAC,SAAS,CAAC,CAAC;CAC1B,CAAC,CAAC;;AAEH,IAAI,CAAC,oCAAoC,EAAE,YAAM;AAC7C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,2BAAQ,GAAG,CAAC,SAAS,CAAC,CAAC;;AAEvB,OAAG,CAAC,SAAS,GAAG,IAAI,CAAC;AACrB,0BAAO,GAAG,CAAC,SAAS,CAAC,CAAC;;AAEtB,OAAG,CAAC,SAAS,GAAG,KAAK,CAAC;AACtB,2BAAQ,GAAG,CAAC,SAAS,CAAC,CAAC;CAC1B,CAAC,CAAC;;AAEH,IAAI,CAAC,mCAAmC,EAAE,YAAM;AAC5C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,OAAG,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACjC,0BAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAErB,OAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AAChC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;CACzB,CAAC,CAAC;;AAEH,IAAI,CAAC,mCAAmC,EAAE,YAAM;AAC5C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,OAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;AACpB,0BAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAErB,OAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;AACrB,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;CACzB,CAAC,CAAC;;AAEH,IAAI,CAAC,+BAA+B,EAAE,YAAM;AACxC,QAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,QAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC1C,QAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;AAExC,0BAAO,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEjB,QAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACtB,+BAAY,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;AAE5B,QAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACtB,OAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACrB,+BAAY,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;AAE5B,QAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACtB,0BAAO,GAAG,CAAC,IAAI,CAAC,CAAC;CACpB,CAAC,CAAC;;AAEH,IAAI,CAAC,+BAA+B,EAAE,YAAM;AACxC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,0BAAO;eAAM,GAAG,CAAC,IAAI,GAAG,IAAI;KAAA,EAAE,mBAAmB,CAAC,CAAC;CACtD,CAAC,CAAC;;AAEH,IAAI,CAAC,iCAAiC,EAAE,YAAM;AAC1C,QAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAChC,QAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC3C,QAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACxC,OAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACrB,QAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC7C,QAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC7C,OAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AACxB,OAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;AAExB,UAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACnC,OAAG,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE/B,QAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACxB,+BAAY,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC9B,+BAAY,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;;AAE/B,QAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACzC,OAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACtB,QAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;AAC7C,UAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACnC,QAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;AAEzB,UAAM,GAAG,GAAG,CAAC,MAAM,CAAC;AACpB,+BAAY,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC9B,+BAAY,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAC/B,+BAAY,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;CAClC,CAAC,CAAC;;AAEH,IAAI,CAAC,iCAAiC,EAAE,YAAM;AAC1C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,+BAAY,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;AAE3B,QAAI,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACtC,QAAI,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;;AAEtC,OAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACzB,+BAAY,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;AAE3B,OAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACzB,+BAAY,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;AAE3B,OAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACzB,+BAAY,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;AAE3B,OAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;AACzB,+BAAY,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;CAC9B,CAAC,CAAC;;AAEH,IAAI,CAAC,iCAAiC,EAAE,YAAM;AAC1C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,0BAAO;eAAM,GAAG,CAAC,MAAM,GAAG,IAAI;KAAA,EAAE,qBAAqB,CAAC,CAAC;CAC1D,CAAC,CAAC;;AAEH,IAAI,CAAC,mCAAmC,EAAE,YAAM;AAC5C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,OAAG,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACjC,0BAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAErB,OAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AAChC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;CACzB,CAAC,CAAC;;AAEH,IAAI,CAAC,mCAAmC,EAAE,YAAM;AAC5C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,OAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;AACpB,0BAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAErB,OAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;AACrB,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;CACzB,CAAC,CAAC;;AAEH,IAAI,CAAC,+BAA+B,EAAE,YAAM;AACxC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,0BAAO,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEjB,OAAG,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACjC,+BAAY,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;AAE9B,OAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AAC5B,0BAAO,GAAG,CAAC,IAAI,CAAC,CAAC;CACpB,CAAC,CAAC;;AAEH,IAAI,CAAC,+BAA+B,EAAE,YAAM;AACxC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,0BAAO,GAAG,CAAC,IAAI,CAAC,CAAC;;AAEjB,OAAG,CAAC,IAAI,GAAG,MAAM,CAAC;AAClB,+BAAY,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AAC9B,+BAAY,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;CACjD,CAAC,CAAC;;AAEH,IAAI,CAAC,kCAAkC,EAAE,YAAM;AAC3C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,+BAAY,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;AAEnC,QAAI,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACrC,OAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;;AAExB,+BAAY,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACnC,+BAAY,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;CACvC,CAAC,CAAC;;AAEH,IAAI,CAAC,kCAAkC,EAAE,YAAM;AAC3C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,0BAAO;eAAM,GAAG,CAAC,OAAO,GAAG,IAAI;KAAA,EAAE,sBAAsB,CAAC,CAAC;CAC5D,CAAC,CAAC;;AAEH,IAAI,CAAC,mCAAmC,EAAE,YAAM;AAC5C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,OAAG,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACjC,0BAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAErB,OAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AAChC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;CACzB,CAAC,CAAC;;AAEH,IAAI,CAAC,mCAAmC,EAAE,YAAM;AAC5C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,OAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;AACpB,0BAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAErB,OAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;AACrB,2BAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;CACzB,CAAC,CAAC;;AAEH,IAAI,CAAC,mCAAmC,EAAE,YAAM;AAC5C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;;AAElC,+BAAY,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;;AAEnC,QAAI,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACtC,OAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEzB,QAAI,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACtC,OAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEzB,+BAAY,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AAClC,+BAAY,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;;AAEzC,WAAO,CAAC,KAAK,GAAG,OAAO,CAAC;AACxB,WAAO,CAAC,KAAK,GAAG,EAAE,CAAC;AACnB,+BAAY,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AAClC,+BAAY,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;;AAEzC,WAAO,CAAC,KAAK,GAAG,EAAE,CAAC;AACnB,+BAAY,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AAClC,+BAAY,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;;AAEzC,WAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AACxB,+BAAY,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AAClC,+BAAY,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;CAC5C,CAAC,CAAC;;AAEH,IAAI,CAAC,mCAAmC,EAAE,YAAM;AAC5C,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;;AAElC,+BAAY,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;;AAEnC,QAAI,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACtC,OAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEzB,QAAI,OAAO,GAAG,IAAI,iBAAiB,EAAE,CAAC;AACtC,OAAG,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;;AAEzB,OAAG,CAAC,aAAa,GAAG,CAAC,CAAC;AACtB,0BAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAEzB,OAAG,CAAC,aAAa,GAAG,CAAC,CAAC;AACtB,0BAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;AACzB,2BAAQ,OAAO,CAAC,QAAQ,CAAC,CAAC;CAC7B,CAAC,CAAC;;AAEH,IAAI,CAAC,+BAA+B,EAAE,YAAM;AACxC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;;AAElC,+BAAY,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;AAEzB,OAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;AACpB,+BAAY,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;AAEzB,OAAG,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;AAC7B,+BAAY,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;CAC7B,CAAC,CAAC;;AAEH,IAAI,CAAC,+BAA+B,EAAE,YAAM;AACxC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;;AAElC,+BAAY,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;AAEzB,OAAG,CAAC,IAAI,GAAG,EAAE,CAAC;AACd,+BAAY,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;CAC7B,CAAC,CAAC;;AAEH,IAAI,CAAC,4BAA4B,EAAE,YAAM;AACrC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,0BAAO;eAAM,GAAG,CAAC,QAAQ;KAAA,EAAE,sBAAsB,CAAC,CAAC;CACtD,CAAC,CAAC;;AAEH,IAAI,CAAC,+BAA+B,EAAE,YAAM;AACxC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;;AAElC,+BAAY,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;;AAEpC,OAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;AACpB,+BAAY,GAAG,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;;AAEzC,OAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;AACrB,+BAAY,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;CACvC,CAAC,CAAC;;AAEH,IAAI,CAAC,+BAA+B,EAAE,YAAM;AACxC,QAAI,GAAG,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAClC,0BAAO;eAAM,GAAG,CAAC,IAAI,GAAG,IAAI;KAAA,EAAE,mBAAmB,CAAC,CAAC;CACtD,CAAC,CAAC","file":"HTMLSelectElement.js","sourcesContent":["/* global test */\nimport { strictEqual, equal, isFalse, isTrue, isNull, throws } from 'proclaim';\n\nconst lib = '../../../../lib/';\n\nconst Document = require(lib + 'Document');\nconst HTMLSelectElement = require(lib + 'HTMLElement/elements/HTMLSelectElement');\nconst HTMLOptionElement = require(lib + 'HTMLElement/elements/HTMLOptionElement');\n\ntest('HTMLSelectElement shoud have the nodeName == select ', () => {\n    let elt = new HTMLSelectElement();\n    strictEqual(elt.nodeName, 'select');\n});\n\ntest('HTMLSelectElement autoFocus getter', () => {\n    let elt = new HTMLSelectElement();\n    isFalse(elt.autoFocus);\n\n    elt.setAttribute('autofocus', '');\n    isTrue(elt.autoFocus);\n\n    elt.removeAttribute('autofocus');\n    isFalse(elt.autoFocus);\n});\n\ntest('HTMLSelectElement autoFocus setter', () => {\n    let elt = new HTMLSelectElement();\n    isFalse(elt.autoFocus);\n\n    elt.autoFocus = true;\n    isTrue(elt.autoFocus);\n\n    elt.autoFocus = false;\n    isFalse(elt.autoFocus);\n});\n\ntest('HTMLSelectElement disabled getter', () => {\n    let elt = new HTMLSelectElement();\n    isFalse(elt.disabled);\n\n    elt.setAttribute('disabled', '');\n    isTrue(elt.disabled);\n\n    elt.removeAttribute('disabled');\n    isFalse(elt.disabled);\n});\n\ntest('HTMLSelectElement disabled setter', () => {\n    let elt = new HTMLSelectElement();\n    isFalse(elt.disabled);\n\n    elt.disabled = true;\n    isTrue(elt.disabled);\n\n    elt.disabled = false;\n    isFalse(elt.disabled);\n});\n\ntest('HTMLSelectElement form getter', () => {\n    const document = new Document();\n    let elt = new HTMLSelectElement();\n    let form = document.createElement('form');\n    let div = document.createElement('div');\n\n    isNull(elt.form);\n\n    form.appendChild(elt);\n    strictEqual(elt.form, form);\n\n    form.appendChild(div);\n    div.appendChild(elt);\n    strictEqual(elt.form, form);\n\n    form.removeChild(div);\n    isNull(elt.form);\n});\n\ntest('HTMLSelectElement form setter', () => {\n    let elt = new HTMLSelectElement();\n    throws(() => elt.form = null, 'form is read only');\n});\n\ntest('HTMLSelectElement labels getter', () => {\n    const document = new Document();\n    let elt = document.createElement('select');\n    let div = document.createElement('div');\n    div.appendChild(elt);\n    let label1 = document.createElement('label');\n    let label2 = document.createElement('label');\n    div.appendChild(label1);\n    div.appendChild(label2);\n\n    label1.setAttribute('for', 'test');\n    elt.setAttribute('id', 'test');\n\n    let labels = elt.labels;\n    strictEqual(labels.length, 1);\n    strictEqual(labels[0], label1);\n\n    let div2 = document.createElement('div');\n    div.appendChild(div2);\n    let label3 = document.createElement('label');\n    label3.setAttribute('for', 'test');\n    div2.appendChild(label3);\n\n    labels = elt.labels;\n    strictEqual(labels.length, 2);\n    strictEqual(labels[0], label1);\n    strictEqual(labels[1], label3);\n});\n\ntest('HTMLSelectElement length getter', () => {\n    let elt = new HTMLSelectElement();\n    strictEqual(elt.length, 0);\n\n    let option1 = new HTMLOptionElement();\n    let option2 = new HTMLOptionElement();\n\n    elt.appendChild(option1);\n    strictEqual(elt.length, 1);\n\n    elt.appendChild(option2);\n    strictEqual(elt.length, 2);\n\n    elt.removeChild(option1);\n    strictEqual(elt.length, 1);\n\n    elt.removeChild(option2);\n    strictEqual(elt.length, 0);\n});\n\ntest('HTMLSelectElement length setter', () => {\n    let elt = new HTMLSelectElement();\n    throws(() => elt.length = null, 'length is read only');\n});\n\ntest('HTMLSelectElement multiple getter', () => {\n    let elt = new HTMLSelectElement();\n    isFalse(elt.multiple);\n\n    elt.setAttribute('multiple', '');\n    isTrue(elt.multiple);\n\n    elt.removeAttribute('multiple');\n    isFalse(elt.multiple);\n});\n\ntest('HTMLSelectElement multiple setter', () => {\n    let elt = new HTMLSelectElement();\n    isFalse(elt.multiple);\n\n    elt.multiple = true;\n    isTrue(elt.multiple);\n\n    elt.multiple = false;\n    isFalse(elt.multiple);\n});\n\ntest('HTMLSelectElement name getter', () => {\n    let elt = new HTMLSelectElement();\n    isNull(elt.name);\n\n    elt.setAttribute('name', 'test');\n    strictEqual(elt.name, 'test');\n\n    elt.removeAttribute('name');\n    isNull(elt.name);\n});\n\ntest('HTMLSelectElement name setter', () => {\n    let elt = new HTMLSelectElement();\n    isNull(elt.name);\n\n    elt.name = 'test';\n    strictEqual(elt.name, 'test');\n    strictEqual(elt.getAttribute('name'), 'test');\n});\n\ntest('HTMLSelectElement options getter', () => {\n    let elt = new HTMLSelectElement();\n    strictEqual(elt.options.length, 0);\n\n    let option = new HTMLOptionElement();\n    elt.appendChild(option);\n\n    strictEqual(elt.options.length, 1);\n    strictEqual(elt.options[0], option);\n});\n\ntest('HTMLSelectElement options setter', () => {\n    let elt = new HTMLSelectElement();\n    throws(() => elt.options = null, 'options is read only');\n});\n\ntest('HTMLSelectElement required getter', () => {\n    let elt = new HTMLSelectElement();\n    isFalse(elt.required);\n\n    elt.setAttribute('required', '');\n    isTrue(elt.required);\n\n    elt.removeAttribute('required');\n    isFalse(elt.required);\n});\n\ntest('HTMLSelectElement required setter', () => {\n    let elt = new HTMLSelectElement();\n    isFalse(elt.required);\n\n    elt.required = true;\n    isTrue(elt.required);\n\n    elt.required = false;\n    isFalse(elt.required);\n});\n\ntest('HTMLSelectElement selected getter', () => {\n    let elt = new HTMLSelectElement();\n\n    strictEqual(elt.selectedIndex, -1);\n\n    let option1 = new HTMLOptionElement();\n    elt.appendChild(option1);\n\n    let option2 = new HTMLOptionElement();\n    elt.appendChild(option2);\n\n    strictEqual(elt.selectedIndex, 0);\n    strictEqual(elt.selectedOption, option1);\n\n    option1.value = 'value';\n    option2.value = '';\n    strictEqual(elt.selectedIndex, 1);\n    strictEqual(elt.selectedOption, option2);\n\n    option1.value = '';\n    strictEqual(elt.selectedIndex, 0);\n    strictEqual(elt.selectedOption, option1);\n\n    option2.selected = true;\n    strictEqual(elt.selectedIndex, 1);\n    strictEqual(elt.selectedOption, option2);\n});\n\ntest('HTMLSelectElement selected setter', () => {\n    let elt = new HTMLSelectElement();\n\n    strictEqual(elt.selectedIndex, -1);\n\n    let option1 = new HTMLOptionElement();\n    elt.appendChild(option1);\n\n    let option2 = new HTMLOptionElement();\n    elt.appendChild(option2);\n\n    elt.selectedIndex = 1;\n    isTrue(option2.selected);\n\n    elt.selectedIndex = 0;\n    isTrue(option1.selected);\n    isFalse(option2.selected);\n});\n\ntest('HTMLSelectElement size getter', () => {\n    let elt = new HTMLSelectElement();\n\n    strictEqual(elt.size, 1);\n\n    elt.multiple = true;\n    strictEqual(elt.size, 4);\n\n    elt.setAttribute('size', 10);\n    strictEqual(elt.size, 10);\n});\n\ntest('HTMLSelectElement size setter', () => {\n    let elt = new HTMLSelectElement();\n\n    strictEqual(elt.size, 1);\n\n    elt.size = 10;\n    strictEqual(elt.size, 10);\n});\n\ntest('HTMLSelectElement tabIndex', () => {\n    let elt = new HTMLSelectElement();\n    throws(() => elt.tabIndex, 'Obsolete since HTML5');\n});\n\ntest('HTMLSelectElement type getter', () => {\n    let elt = new HTMLSelectElement();\n\n    strictEqual(elt.type, 'select-one');\n\n    elt.multiple = true;\n    strictEqual(elt.type, 'select-multiple');\n\n    elt.multiple = false;\n    strictEqual(elt.type, 'select-one');\n});\n\ntest('HTMLSelectElement type setter', () => {\n    let elt = new HTMLSelectElement();\n    throws(() => elt.type = null, 'type is read only');\n});\n\n"]}